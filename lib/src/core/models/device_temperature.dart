import 'package:equatable/equatable.dart';
import 'package:flutter/material.dart';

/// generate by https://javiercbk.github.io/json_to_dart/
class AutogeneratedDeviceTemperature {
  final List<DeviceTemperature> results;

  AutogeneratedDeviceTemperature({this.results});

  factory AutogeneratedDeviceTemperature.fromJson(Map<String, dynamic> json) {
    List<DeviceTemperature> temp = <DeviceTemperature>[];

    if (json['results'] != null) {
      json['results']?.forEach((v) {
        temp.add(DeviceTemperature.fromJson(v as Map<String, dynamic>));
      });
    }
    return AutogeneratedDeviceTemperature(results: temp);
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (results != null) {
      data['temperature'] = results.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

@immutable
class DeviceTemperature extends Equatable {
  final int id;
  final String deviceID;
  final String timestamp;
  final double skinTemp;
  final double bodyTemp;

  DeviceTemperature({
    @required this.id,
    this.deviceID,
    this.skinTemp,
    this.bodyTemp,
    this.timestamp,
  });

  @override
  List<Object> get props => [id, deviceID];

  factory DeviceTemperature.fromJson(Map<String, dynamic> json) {
    return DeviceTemperature(
      id: json['id'] as int,
      deviceID: json['deviceID'] as String,
      skinTemp: double.parse('${json['skinTemp']}'),
      bodyTemp: double.parse('${json['bodyTemp']}'),
      timestamp: json['timestamp'] as String,
    );
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['deviceID'] = deviceID;
    data['skinTemp'] = skinTemp;
    data['bodyTemp'] = bodyTemp;
    data['timestamp'] = timestamp;
    return data;
  }
}
