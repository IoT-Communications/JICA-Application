import 'package:equatable/equatable.dart';
import 'package:flutter/material.dart';
import 'package:jica/src/utils/debugBro.dart';

/// generate by https://javiercbk.github.io/json_to_dart/
class AutogeneratedDeviceLocation {
  final List<DeviceLocation> results;

  AutogeneratedDeviceLocation({this.results});

  factory AutogeneratedDeviceLocation.fromJson(Map<String, dynamic> json) {
    List<DeviceLocation> temp = <DeviceLocation>[];

    if (json['results'] != null) {
      json['results']?.forEach((v) {
        temp.add(DeviceLocation.fromJson(v as Map<String, dynamic>));
      });
    }
    return AutogeneratedDeviceLocation(results: temp);
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (results != null) {
      data['users'] = results.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

@immutable
class DeviceLocation extends Equatable {
  final int id;
  final String deviceID;
  final String status;
  final String timestamp;
  final double latitude;
  final double longitude;

  DeviceLocation({
    @required this.id,
    this.deviceID,
    this.status,
    this.timestamp,
    this.latitude,
    this.longitude,
  });

  @override
  List<Object> get props => [id, deviceID];

  factory DeviceLocation.fromJson(Map<String, dynamic> json) {
    double long = json['longitude'].toDouble();
    double lat = json['latitude'].toDouble();
    return DeviceLocation(
      id: json['id'] as int,
      deviceID: json['deviceID'] as String,
      latitude: lat,
      longitude: long,
      status: json['status'] as String,
      timestamp: json['timestamp'] as String,
    );
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['deviceID'] = deviceID;
    data['latitude'] = latitude;
    data['longitude'] = longitude;
    data['status'] = status;
    data['timestamp'] = timestamp;
    return data;
  }
}
