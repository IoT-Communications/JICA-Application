import 'package:equatable/equatable.dart';
import 'package:flutter/material.dart';
import 'package:jica/src/utils/debugBro.dart';

/// generate by https://javiercbk.github.io/json_to_dart/
class AutogeneratedDeviceHealth {
  final List<DeviceHealth> results;

  AutogeneratedDeviceHealth({this.results});

  factory AutogeneratedDeviceHealth.fromJson(Map<String, dynamic> json) {
    List<DeviceHealth> temp = <DeviceHealth>[];

    if (json['results'] != null) {
      json['results']?.forEach((v) {
        temp.add(DeviceHealth.fromJson(v as Map<String, dynamic>));
      });
    }
    return AutogeneratedDeviceHealth(results: temp);
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (results != null) {
      data['health'] = results.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

@immutable
class DeviceHealth extends Equatable {
  final int id;
  final String deviceID;
  final int bpHigh;
  final int bpLow;
  final int heartRate;
  final String timestamp;

  DeviceHealth({
    @required this.id,
    this.deviceID,
    this.bpHigh,
    this.timestamp,
    this.bpLow,
    this.heartRate,
  });

  @override
  List<Object> get props => [id, deviceID];

  factory DeviceHealth.fromJson(Map<String, dynamic> json) {
    return DeviceHealth(
      id: json['id'] as int,
      deviceID: json['deviceID'] as String,
      bpHigh: json['bpHigh'],
      bpLow: json['bpLow'],
      heartRate: json['heartRate'],
      timestamp: json['timestamp'] as String,
    );
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['deviceID'] = deviceID;
    data['bpHigh'] = bpHigh;
    data['bpLow'] = bpLow;
    data['heartRate'] = heartRate;
    data['timestamp'] = timestamp;
    return data;
  }
}
