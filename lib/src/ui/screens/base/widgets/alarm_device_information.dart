import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:jica/src/core/models/device_alarm.dart';
import 'package:jica/src/services/bloc/base_graphql_bloc.dart';
import 'package:jica/src/services/bloc/device_bloc.dart';
import 'package:jica/src/utils/debugBro.dart';
import 'package:jica/src/utils/dialogs.dart';

class DeviceAlarmInformation extends StatefulWidget {
  final String deviceID;

  const DeviceAlarmInformation({Key key, this.deviceID}) : super(key: key);

  @override
  _DeviceInformationState createState() => _DeviceInformationState();
}

class _DeviceInformationState extends State<DeviceAlarmInformation> {
  List<DeviceAlarm> alarms = [];

  @override
  void didChangeDependencies() {
    context.read<DeviceBloc>()..getAlarmInfo(widget.deviceID);
    super.didChangeDependencies();
  }

  @override
  Widget build(BuildContext context) {
    return BlocConsumer<DeviceBloc, GraphqlState>(
      builder: (BuildContext context, GraphqlState state) {
        return SingleChildScrollView(
          child: DataTable(
            columnSpacing: 10,
            columns: const <DataColumn>[
              DataColumn(
                label: Text(
                  'State',
                  style: TextStyle(fontStyle: FontStyle.italic),
                ),
              ),
              DataColumn(
                label: Text(
                  'timestamp',
                  style: TextStyle(fontStyle: FontStyle.italic),
                ),
              ),
            ],
            rows: <DataRow>[
              for (DeviceAlarm alarm in alarms)
                DataRow(
                  cells: <DataCell>[
                    DataCell(Text('${alarm.state}')),
                    DataCell(Text('${alarm.timestamp}')),
                  ],
                )
            ],
          ),
        );
      },
      listener: (context, state) {
        if (state is GraphqlLoadedState) {
          Dialogs.closeLoadingDialog(context);
          alarms = AutogeneratedDeviceAlarm.fromJson(
              {'results': state.data['getDeviceAlarm']['deviceAlarm']}).results;
          alarms = alarms.reversed.toList();
        }

        if (state is GraphqlErrorState) {
          logger.e(state.error);
        }

        if (state is GraphqlLoadingState) {
          Dialogs.showLoadingDialog(context,
              message: 'loading device alarm info...');
        }
      },
    );
  }
}
